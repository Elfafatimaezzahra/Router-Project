{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\react-app\\\\routeproject\\\\src\\\\Component\\\\Description\\\\Description.js\",\n  _s = $RefreshSig$();\nimport \"./description.css\";\nimport { Link, useParams } from \"react-router-dom\";\nimport MovieCard from \"../MovieCard/MovieCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Description(_ref) {\n  _s();\n  let {\n    list\n  } = _ref;\n  console.log(list.length);\n  let params = useParams();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"descri\",\n    children: [isNaN(params.id) || list.length <= parseInt(params.id) ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Movie With this id \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 77\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"desc\",\n      children: [/*#__PURE__*/_jsxDEV(MovieCard, {\n        ele: list[params.id]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n        width: \"700\",\n        height: \"500\",\n        src: list[params.id].trailer,\n        title: \"YouTube video player\",\n        frameBorder: \"0\",\n        allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n        allowFullScreen: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      className: \"back\",\n      to: \"/\",\n      children: \"Back to Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n_s(Description, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n_c = Description;\nvar _c;\n$RefreshReg$(_c, \"Description\");","map":{"version":3,"names":["Link","useParams","MovieCard","jsxDEV","_jsxDEV","Description","_ref","_s","list","console","log","length","params","className","children","isNaN","id","parseInt","fileName","_jsxFileName","lineNumber","columnNumber","ele","width","height","src","trailer","title","frameBorder","allow","allowFullScreen","to","_c","$RefreshReg$"],"sources":["C:/Users/dell/Desktop/react-app/routeproject/src/Component/Description/Description.js"],"sourcesContent":["import \"./description.css\";\r\nimport {Link, useParams} from \"react-router-dom\";\r\nimport MovieCard from \"../MovieCard/MovieCard\";\r\n\r\nexport default function Description({list}) {\r\n\r\n    console.log(list.length);\r\n    let params = useParams();\r\n    return (\r\n        <div className=\"descri\">\r\n            {  ( isNaN(params.id) || list.length <= parseInt(params.id)) ?  <p>No Movie With this id </p> :\r\n            \r\n            <div className=\"desc\">\r\n            <MovieCard ele={list[params.id]} /> \r\n            <iframe width=\"700\" height=\"500\" src={list[params.id].trailer}\r\n                title=\"YouTube video player\" \r\n                frameBorder=\"0\"\r\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                allowFullScreen></iframe>\r\n                \r\n            </div>\r\n            }\r\n            <Link className=\"back\" to=\"/\">Back to Home</Link>\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":";;AAAA,OAAO,mBAAmB;AAC1B,SAAQA,IAAI,EAAEC,SAAS,QAAO,kBAAkB;AAChD,OAAOC,SAAS,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,eAAe,SAASC,WAAWA,CAAAC,IAAA,EAAS;EAAAC,EAAA;EAAA,IAAR;IAACC;EAAI,CAAC,GAAAF,IAAA;EAEtCG,OAAO,CAACC,GAAG,CAACF,IAAI,CAACG,MAAM,CAAC;EACxB,IAAIC,MAAM,GAAGX,SAAS,EAAE;EACxB,oBACIG,OAAA;IAAKS,SAAS,EAAC,QAAQ;IAAAC,QAAA,GACdC,KAAK,CAACH,MAAM,CAACI,EAAE,CAAC,IAAIR,IAAI,CAACG,MAAM,IAAIM,QAAQ,CAACL,MAAM,CAACI,EAAE,CAAC,gBAAKZ,OAAA;MAAAU,QAAA,EAAG;IAAsB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,gBAE7FjB,OAAA;MAAKS,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACrBV,OAAA,CAACF,SAAS;QAACoB,GAAG,EAAEd,IAAI,CAACI,MAAM,CAACI,EAAE;MAAE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACnCjB,OAAA;QAAQmB,KAAK,EAAC,KAAK;QAACC,MAAM,EAAC,KAAK;QAACC,GAAG,EAAEjB,IAAI,CAACI,MAAM,CAACI,EAAE,CAAC,CAACU,OAAQ;QAC1DC,KAAK,EAAC,sBAAsB;QAC5BC,WAAW,EAAC,GAAG;QACfC,KAAK,EAAC,0FAA0F;QAChGC,eAAe;MAAA;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAU;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEvB,eAENjB,OAAA,CAACJ,IAAI;MAACa,SAAS,EAAC,MAAM;MAACkB,EAAE,EAAC,GAAG;MAAAjB,QAAA,EAAC;IAAY;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC/C;AAEd;AAACd,EAAA,CArBuBF,WAAW;EAAA,QAGlBJ,SAAS;AAAA;AAAA+B,EAAA,GAHF3B,WAAW;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}